using System;
using System.Collections.Generic;
using System.Threading.Tasks;
using Dash.Engine.Abstractions;

namespace Dash.Nodes
{
    public class ConfigurationNode : AstNode
    {
        public string AutogenSuffix { get; set; } = ".generated.cs";

        public string? Header { get; set; } = "<auto-generated>Generated by dotnet dash</auto-generated>";

        public string? DefaultNamespace { get; set; }

        public IList<TemplateNode> Templates { get; set; } = new List<TemplateNode>();

        public ConfigurationNode AddTemplateNode(string template, string? output)
        {
            var node = new TemplateNode
            {
                Template = new Uri(template),
            };

            if (output != null)
            {
                node.Output = new Uri(output);
            }

            Templates.Add(node);
            return this;
        }

        public override async Task Accept(INodeVisitor visitor)
        {
            await visitor.Visit(this);
        }
    }
}
